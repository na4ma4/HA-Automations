blueprint:
  domain: automation
  name: Philips Hue Tap Switch (ZGPSWITCH)
  description: |
    Quick and clean setup for Hue Tap switch.
  source_url: https://github.com/na4ma4/ha-automations/blob/main/blueprints/philips_hue-tap_switch.yaml
  input:
    huetap:
      name: Philips Hue Tap Switch
      description: The switch to use.
      selector:
        device:
          filter:
            model: "Hue tap switch (ZGPSWITCH)"
          multiple: false
    action_button_1:
      name: Button 1 Action
      description: Action to run on button 1 press
      default: []
      selector:
        action: {}
    action_button_2:
      name: Button 2 Action
      description: Action to run on button 2 press
      default: []
      selector:
        action: {}
    action_button_3:
      name: Button 3 Action
      description: Action to run on button 3 press
      default: []
      selector:
        action: {}
    action_button_4:
      name: Button 4 Action
      description: Action to run on button 4 press
      default: []
      selector:
        action: {}
mode: queued
max_exceeded: silent
variables:
  device_id: !input huetap
  my_action_button_1: !input action_button_1
  my_action_button_2: !input action_button_2
  my_action_button_3: !input action_button_3
  my_action_button_4: !input action_button_4
triggers:
  - trigger: event
    event_type: hue_event
    event_data:
      device_id: !input huetap
actions:
  - variables:
      event_id: "{{ trigger.event.data.id }}"
      event_type: "{{ trigger.event.data.type }}"
      button_index: "{{ trigger.event.data.subtype }}"
  - action: logbook.log
    data:
      name: Hue Tap Button Pressed
      message: "{{ event_id }} button {{ button_index }}"
  - alias: "select button"
    choose:
      - conditions:
          - condition: template
            value_template: "{{ button_index == 1 }}"
        sequence:
          - alias: "Do something when Button 1 is pressed"
            if: "{{ not my_action_button_1 in ('none', 'null', 'unavailable', '') }}"
            then: !input action_button_1
      - conditions:
          - condition: template
            value_template: "{{ button_index == 2 }}"
        sequence:
          - alias: Do something when Button 2 is pressed
            if: "{{ not my_action_button_2 in ('none', 'null', 'unavailable', '') }}"
            then: !input action_button_2
      - conditions:
          - condition: template
            value_template: "{{ button_index == 3 }}"
        sequence:
          - alias: Do something when Button 3 is pressed
            if: "{{ not my_action_button_3 in ('none', 'null', 'unavailable', '') }}"
            then: !input action_button_3
      - conditions:
          - condition: template
            value_template: "{{ button_index == 4 }}"
        sequence:
          - alias: Do something when Button 4 is pressed
            if: "{{ not my_action_button_4 in ('none', 'null', 'unavailable', '') }}"
            then: !input action_button_4
